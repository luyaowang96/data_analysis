一、层次化索引
在一个轴上拥有多个(两个以上)索引级别，即以低维度形式处理高维度数据
data = pd.Series(np.random.randn(9),index=[['a', 'a', 'a', 'b', 'b', 'c', 'c','d', 'd'],[1, 2, 3, 1, 3, 1, 2, 2, 3]])
对层次化索引的切片：
data['b']
data['b':'c']
data.loc[['b', 'd']]
data.loc[:, 2] # 在内层中选取

-- unstack 将这段数据重新安排到一个 DataFrame 中
data.unstack()
-- stack 是unstack的逆运算
data.unstack().stack()
每条轴都可以有分层索引，如果指定名称，它们就会显示在控制台输出中:
frame.index.names = ['key1', 'key2']
frame.columns.names = ['state', 'color']
（1）重排与分级排序 swaplevel/sort_index
接受两个级别编号或名称，并返回一个互换了级别的新对象(但数据不会发生变化)
frame.swaplevel('key1', 'key2')
sort_index # 根据单个级别中的值对数据进行排序
frame.sort_index(level=1)
frame.swaplevel(0, 1).sort_index(level=0)
